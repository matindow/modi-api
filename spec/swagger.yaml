openapi: 3.0.0
info:
  description: |
    MODI api
  version: 2-oas6
  title: MODI
servers:
  - url: https://indowsandbox.com/sfapi/v1
    description: Sandbox server (uses test data)
  - url: https://modi.indowwindows.com/sfapi/v1
    description: Production server (uses live data)
security:
  - BasicAuth: []
paths:
  /orders:
    post:
      tags:
        - order
        - post
      summary: create order
      operationId: createOrder
      responses:
        "201":
          description: order created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/order"
  /orders/{order_id}:
    get:
      tags:
        - order
        - get
      summary: get order by id
      description: Returns a single order
      operationId: getOrder
      parameters:
        - name: order_id
          in: path
          description: ID of order to return
          required: true
          schema:
            type: string
            example: "56070"
        - name: items
          in: query
          description: return with items array
          required: false
          schema:
            type: boolean
            default: false
        - name: sales_modifiers
          in: query
          description: return with sales modifiers array
          required: false
          schema:
            type: boolean
            default: false
        - name: payments
          in: query
          description: return with payments array
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      tags:
        - order
        - patch
      summary: Update an existing order by id
      operationId: updateOrder
      parameters:
        - name: order_id
          in: path
          description: ID of order to update
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: order updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/order"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/order"
    delete:
      tags:
        - order
        - delete
      summary: Delete an existing order by id
      operationId: deleteOrder
      parameters:
        - name: order_id
          in: path
          description: ID of order to delete
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: Order Deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /sites:
    post:
      tags:
        - site
        - post
      summary: create site
      operationId: createSite
      responses:
        "201":
          description: site created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/site"
  /sites/{site_id}:
    get:
      tags:
        - site
        - get
      summary: get site by id
      description: Returns a single site
      operationId: getSite
      parameters:
        - name: site_id
          in: path
          description: ID of site to return
          required: true
          schema:
            type: string
            example: "56070"
        - name: items
          in: query
          description: return with items array
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: site not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      tags:
        - site
        - patch
      summary: Update an existing site by id
      operationId: updateSite
      parameters:
        - name: site_id
          in: path
          description: ID of site to update
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: site updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/site"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: site not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/site"
    delete:
      tags:
        - site
        - delete
      summary: Delete an existing site by id
      operationId: deleteSite
      parameters:
        - name: site_id
          in: path
          description: ID of site to delete
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: site deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /addresses:
    post:
      tags:
        - address
        - post
      summary: create address
      operationId: createAddress
      responses:
        "201":
          description: address created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/address"
  /addresses/{address_id}:
    get:
      tags:
        - address
        - get
      summary: get address by id
      description: Returns a single address
      operationId: getAddress
      parameters:
        - name: address_id
          in: path
          description: ID of address to return
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: site not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      tags:
        - address
        - patch
      summary: Update an existing address by id
      operationId: updateAddress
      parameters:
        - name: address_id
          in: path
          description: ID of address to update
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: address updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/address"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: site not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/site"
    delete:
      tags:
        - site
        - delete
      summary: Delete an existing address by id
      operationId: deleteAddress
      parameters:
        - name: address_id
          in: path
          description: ID of address to delete
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: address deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /estimates:
    post:
      tags:
        - estimate
        - post
      summary: create estimate
      operationId: createEstimate
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/estimate"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/estimate"
  /estimates/{estimate_id}:
    get:
      tags:
        - estimate
        - get
      summary: get estimate by id
      description: Returns a single estimate
      operationId: getEstimate
      parameters:
        - name: estimate_id
          in: path
          description: ID of estimate to return
          required: true
          schema:
            type: string
            example: "17419"
        - name: items
          in: query
          description: return with items array
          required: false
          schema:
            type: boolean
            default: false
        - name: sales_modifiers
          in: query
          description: return with sales modifiers array
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/estimate"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Estimate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      tags:
        - estimate
        - patch
      summary: Update an existing estimate by id
      operationId: updateEstimate
      parameters:
        - name: estimate_id
          in: path
          description: ID of estimate to update
          required: true
          schema:
            type: string
            example: "17419"
      responses:
        "200":
          description: estimate updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/estimate"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Estimate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/estimate"
    delete:
      tags:
        - estimate
        - delete
      summary: Delete an existing estimate by id
      operationId: deleteEstimate
      parameters:
        - name: estimate_id
          in: path
          description: ID of estimate to delete
          required: true
          schema:
            type: string
            example: "17419"
      responses:
        "200":
          description: estimate deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Estimate not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /customers:
    post:
      tags:
        - customer
        - post
      summary: create customer
      operationId: createCustomer
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/customerPost"
  /customers/{customer_id}:
    get:
      tags:
        - customer
        - get
      summary: get customer by id
      description: Returns a single customer
      operationId: getCustomer
      parameters:
        - name: customer_id
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: string
            example: "94257"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      tags:
        - customer
        - patch
      summary: Update an existing customer by id
      operationId: updateCustomer
      parameters:
        - name: customer_id
          in: path
          description: ID of customer to update
          required: true
          schema:
            type: string
            example: "94257"
      responses:
        "200":
          description: Customer updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/customer"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/customerPatch"
    delete:
      tags:
        - customer
        - delete
      summary: Delete an existing customer by id
      operationId: deleteCustomer
      parameters:
        - name: customer_id
          in: path
          description: ID of customer to delete
          required: true
          schema:
            type: string
            example: "17419"
      responses:
        "200":
          description: Customer deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /items:
    post:
      tags:
        - item
        - post
      summary: add new item to order/estimate/site
      operationId: createItem
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/item"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/itemPost"
  /items/{item_id}:
    get:
      tags:
        - item
        - get
      summary: get item by id
      description: Returns a single item
      operationId: getItem
      parameters:
        - name: item_id
          in: path
          description: ID of item to return
          required: true
          schema:
            type: string
            example: "803365"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/item"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      tags:
        - item
        - patch
      summary: Update an existing item by id
      operationId: updateItem
      parameters:
        - name: item_id
          in: path
          description: ID of item to update
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: item updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/item"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/itemPatch"
    delete:
      tags:
        - item
        - delete
      summary: Delete an existing item by id
      operationId: deleteItem
      parameters:
        - name: item_id
          in: path
          description: ID of item to delete
          required: true
          schema:
            type: string
            example: "56070"
      responses:
        "200":
          description: item deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /sales_modifiers:
    post:
      tags:
        - sales_modifier
        - post
      summary: add new sales modifier to order/estimate
      operationId: createSalesModifier
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sales_modifier"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/sales_modifier"
    get:
      tags:
        - sales_modifier
        - get
      summary: get sales modifier by code
      description: Returns an array of sales modifiers
      operationId: getSalesModifiersByCode
      parameters:
        - name: code
          in: query
          description: code of sales modifier to return
          required: false
          schema:
            type: string
            example: "DirectSale Disct FB:TAPE20"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/sales_modifier"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: item not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /sales_modifiers/{sales_modifier_id}:
    get:
      tags:
        - sales_modifier
        - get
      summary: get sales_modifier by id
      description: Returns a single sales_modifier
      operationId: getSalesModifierById
      parameters:
        - name: sales_modifier_id
          in: path
          description: ID of sales_modifier to return
          required: true
          schema:
            type: string
            example: "803365"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/sales_modifier"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: sales modifier not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    delete:
      tags:
        - sales_modifier
        - delete
      summary: Delete sales modifier from order/estimate by id
      operationId: deleteSalesModifier
      parameters:
        - name: sales_modifier_id
          in: path
          description: ID of sales modifier to delete
          required: true
          schema:
            type: string
            example: "88660"
      responses:
        "200":
          description: sales modifier deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: sales modifier not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
  /payments:
    post:
      tags:
        - payments
        - post
      summary: add new payment to order
      operationId: createPayment
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/paymentPost"
  /payments/{payment_id}:
    get:
      tags:
        - payments
        - get
      summary: get payment by id
      operationId: getPayment
      parameters:
        - name: payment_id
          in: path
          description: ID of payment to delete
          required: true
          schema:
            type: string
            example: "2"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: payment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
    patch:
      tags:
        - payments
        - patch
      summary: update payment by id
      operationId: updatePayment
      parameters:
        - name: payment_id
          in: path
          description: ID of payment to update
          required: true
          schema:
            type: string
            example: "2"
      responses:
        "200":
          description: payment updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment"
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: payment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
      requestBody:
        $ref: "#/components/requestBodies/paymentPatch"
    delete:
      tags:
        - payments
        - delete
      summary: delete payment by id
      operationId: deletePayment
      parameters:
        - name: payment_id
          in: path
          description: ID of payment to delete
          required: true
          schema:
            type: string
            example: "2"
      responses:
        "200":
          description: payment deleted
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "401":
          description: Access Denied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
        "404":
          description: payment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    error:
      type: object
      properties:
        error:
          type: string
          example: "Order not found"
    estimateReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "1"     
        estimate_total:
          type: number
          format: double
          example: 100
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"             
    estimateEditable:
      type: object
      properties:
        customer_id:
          type: string
          example: "353"
        site_id:
          type: string
          example: "88678"
        organization_name:
          type: string
          example: "Indow HQ"
        owner:
          type: string
          example: "adminuser"
        name:
          type: string
          example: "Museum"
        parent_estimate_id:
          type: string
          example: "120955"          
        items:
          type: array
          items:
            $ref: "#/components/schemas/item"
        sales_modifiers:
          type: array
          items:
            $ref: "#/components/schemas/sales_modifier"      
    estimate:
      allOf:
        - $ref: "#/components/schemas/estimateReadOnly"
        - $ref: "#/components/schemas/estimateEditable"
    orderReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "56057"        
        price_subtotal:
          type: number
          example: 331
        price_total:
          type: number
          example: 357.15        
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"               
    orderEditable:
      type: object
      properties:        
        customer_id:
          type: string
          example: "353"
        site_id:
          type: string
          example: "88678"
        organization_name:
          type: string
          example: "Indow HQ"
        owner:
          type: string
          example: "adminuser"
        status_code:
          type: string
          example: "100"
        jobsite_pricing:
          type: boolean
          default: false
        estimate_id:
          type: string
          example: "145844"        
        tracking_num:
          type: string
          example: "799909784"
        carrier:
          type: string
          example: "UPS Freight"
        ship_method:
          type: string
          example: "Ground"
        ship_hold:
          type: boolean
          default: false
        shipping_notes:
          type: string
          example: "Will-Call - Customer will pick up panels when ready"
        expedite_date:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"
        commit_date:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"
        build_date:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"
        invoice_date:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"
        wholesale_discount:
          type: number
          example: 35
        shipping_address_id:
          type: string
          example: "114175"
        items:
          type: array
          items:
            $ref: "#/components/schemas/item"
        sales_modifiers:
          type: array
          items:
            $ref: "#/components/schemas/sales_modifier"
        payments:
          type: array
          items:
            $ref: "#/components/schemas/payment"    
    order:
      allOf:
        - $ref: "#/components/schemas/orderReadOnly"
        - $ref: "#/components/schemas/orderEditable"
    itemReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "56057"        
        tool_type:
          type: string
          example: "laser"
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"                        
    itemPost:
      type: object
      properties:
        order_id:
          type: string
          example: "88673"
          nullable: true
        estimate_id:
          type: string
          example: "88673"
          nullable: true
        site_id:
          type: string
          example: "88673"
          nullable: true
        price:
          type: number
          format: double
          nullable: true
          example: 144
        price_override:
          type: number
          format: double
          nullable: true
          example: 144
    itemPatch:
      type: object
      properties:
        shape:
          type: string
          example: "Rectangle"
        room:
          type: string
          example: "room1"
        location:
          type: string
          example: "loc1"
        floor:
          type: string
          example: "floor1"
          nullable: true
        status:
          type: string
          example: "Include"
          nullable: true
        product:
          type: string
          example: "T3 Insert"
        product_type:
          type: string
          example: "MG"
        tubing:
          type: string
          example: "White"
        frame_step:
          type: string
          example: "1"
          nullable: true
        frame_depth:
          type: string
          example: "Less than 5/8 in."
          nullable: true
        notes:
          type: string
          example: "note"
          nullable: true
        A:
          type: number
          format: double
          nullable: true
          example: 10
        B:
          type: number
          format: double
          nullable: true
          example: 11
        C:
          type: number
          format: double
          nullable: true
          example: 12
        D:
          type: number
          format: double
          nullable: true
          example: 13
        E:
          type: number
          format: double
          nullable: true
          example: 14
        F:
          type: number
          format: double
          nullable: true
          example: 15
        width:
          type: number
          format: double
          nullable: true
          example: 10
        height:
          type: number
          format: double
          nullable: true
          example: 20
        spines:
          type: string
          nullable: true
          example: "None"
        drafty_window:
          type: boolean
          default: false
        special_geometry:
          type: boolean
          default: false
    item:
      allOf:
         - $ref: "#/components/schemas/itemReadOnly"
         - $ref: "#/components/schemas/itemEditable"
    itemEditable:
      allOf:
         - $ref: "#/components/schemas/itemPatch"
         - $ref: "#/components/schemas/itemPost"
    sales_modifierReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "88590"
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"        
    sales_modifierEditable:
      type: object
      properties:
        order_id:
          type: string
          example: "1"
        estimate_id:
          type: string
          example: "2"
        quantity:
          type: integer
          format: int64
          example: 1
        modifier:
          type: string
          example: "dollar"
        value:
          type: number
          format: double
          example: 100
        amount:
          type: number
          format: double
          example: 1          
    sales_modifier:
      allOf:
        - $ref: "#/components/schemas/sales_modifierReadOnly"
        - $ref: "#/components/schemas/sales_modifierEditable" 
    paymentReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "803555"
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"    
    paymentPatch:
      type: object
      properties:
        payment_received:
          type: string
          format: date
          example: "2021-11-26"    
        payment_type:
          type: string
          example: "Check (down)"
        payment_amount:
          type: number
          format: double
          example: 200          
    paymentPost:
      type: object
      properties:
        order_id:
          type: string
          example: "1"
    paymentEditable:
      allOf:
        - $ref: "#/components/schemas/paymentPatch"
        - $ref: "#/components/schemas/paymentPost"
    payment:
      allOf:
        - $ref: "#/components/schemas/paymentReadOnly"
        - $ref: "#/components/schemas/paymentEditable"
    customer:
      allOf:
        - $ref: "#/components/schemas/customerReadOnly"
        - $ref: "#/components/schemas/customerEditable"
    customerEditable:
      allOf:
        - $ref: "#/components/schemas/customerPatch"
        - $ref: "#/components/schemas/customerPost"
    customerReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "1"
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"
    customerPatch:
      type: object
      properties:
        crm_id:
          type: string
          example: "0030L00f00d1v7DXcqtest"
          nullable: true
        first_name:
          type: string
          example: "TestFirst"
        last_name:
          type: string
          example: "Collerweather"
        phone:
          type: string
          example: "555-555-5555"
        email:
          type: string
          example: "test@test.com"
        create_job_site:
          type: boolean
          default: false
        create_estimate:
          type: boolean
          default: false
        organization_name:
          type: string
          example: "Indow HQ"
        owner:
          type: string
          example: "adminuser"
        address:
          type: string
          example: "504 Branard St."
        address_ext:
          type: string
          example: "Unit A"
        city:
          type: string
          example: "Houston"
        state:
          type: string
          example: "TX"
        zipcode:
          type: string
          example: "77006"
        shipping:
          type: boolean
          default: false
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/address"
    customerPost:
      type: object
      properties:
        site_id:
          type: string
          example: "2"
          nullable: true
        estimate_id:
          type: string
          example: "3"
          nullable: true
    addressReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "82915"      
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"          
    addressEditable:
      type: object
      properties:
        customer_id:
          type: string
          example: "94257"
        address:
          type: string
          example: "504 Branard St."
        address_ext:
          type: string
          example: "Unit A"
        city:
          type: string
          example: "Houston"
        state:
          type: string
          example: "TX"
        zipcode:
          type: string
          example: "11803"
        shipping:
          type: boolean
          default: false
        billing:
          type: boolean
          default: false
        other:
          type: boolean
          default: false
        other_type_name:
          type: string
          example: "personal"
        country:
          type: string
          example: "United States"
    address:
      allOf:
      - $ref: "#/components/schemas/addressReadOnly"
      - $ref: "#/components/schemas/addressEditable"
    siteReadOnly:
      type: object
      properties:
        id:
          type: string
          example: "88686"
        updated_at:
          type: string
          format: date-time
          example: "2021-11-26T07:20:54-08:00"
    siteEditable:
      type: object
      properties:
        customer_id:
          type: string
          example: "353"
        owner:
          type: string
          example: "adminuser"
        address_ext:
          type: string
          example: "Unit A"
        address:
          type: string
          example: "747 E 32nd Ave"
        city:
          type: string
          example: "Eugene"
        state:
          type: string
          example: "OR"
        zipcode:
          type: string
          example: "97405"
        address_type:
          type: string
          example: "residential"
        project_name:
          type: string
          example: "abcd"
    site:
      allOf:
        - $ref: "#/components/schemas/siteReadOnly"
        - $ref: "#/components/schemas/siteEditable"
  requestBodies:
    order:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/orderEditable"
      description: order
      required: true
    estimate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/estimateEditable"
      description: estimate
      required: true
    customerPatch:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/customerPatch"
      description: customer
      required: true
    customerPost:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/customerEditable"
      description: customer
      required: true  
    itemPatch:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/itemPatch"
      description: item
      required: true
    itemPost:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/itemEditable"
      description: item
      required: true
    site:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/siteEditable"
      description: site
      required: true
    address:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/addressEditable"
      description: address
      required: true
    sales_modifier:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/sales_modifierEditable"
      description: sales modifier
      required: true
    paymentPatch:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentPatch"
      description: payment
      required: true
    paymentPost:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/paymentEditable"
      description: payment
      required: true